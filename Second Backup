/*
 * 
 * Date:May 8, 2021
 * Name:Gordon Wu
 * Teacher:Mr.Ho
 * Description: A visual representation of the distribution of first digits from 1 to 9
 * */
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.stage.Stage;
import java.io.FileWriter; 
import java.util.Scanner; 


public class App extends Application {
  
    public static void main(String[] args) {
        //Initialize variables
        String choice = "A"; 
        double empty[] = {};
        double [] sale = readCsv(empty);
 
        //Keep calling print menu method until valid answer or they want to quit
        while(choice.equals("A") || choice.equals("B")){
            choice = printMenu(choice); 
            if(choice.equals("A")){

                //This will be here for now. The readCsv should print out all the values 
                for(int i = 0; i < sale.length; i++){
                  System.out.println(sale[i]);
                }
            }
            else if(choice.equals("B")){
                launch(args); //Launches the JavaFX application 
            }
        }
 
 
    }
    
    //DocString
    public static double [] readCsv(double[] sales){

      //Paste
        double [] sample = {111, 111, 111, 555, 565, 666, 666, 666, 666, 666};
        sales = sample; 
        return sales;
    }
    
    /*
    * Description: Asks user to choose an option
    * 
    * @author - Gordon Wu
    * @param choice - The string choice takes in user input 
    * @return - returns the String choice
    * 
    * */ 
    public static String printMenu(String choice){
        //Initialize scanner
        Scanner reader = new Scanner(System.in);
        //Ask user to choose an option
        System.out.println("A) Report on total Sales"); 
        System.out.println("B) Check for fraud in sales data"); 
        System.out.println("C) Quit"); 
        System.out.println("Type either 'A' , 'B' or 'C'"); 
        choice = reader.nextLine(); 
 
        reader.close();
        return choice;   
         
    }
        
    
    /*
    * Description: Generates a bar chart and displays the digit frequency as a percentage on the bar chart. Also exports the digit
    *              frequency to the "results.csv" file
    * 
    * @author - Gordon Wu 
    * */
    @Override 
    public void start(Stage stage) throws Exception {

        //Lets we're working with these numbers 
        //double empty[] = {}; 
        double salesData[] = {111, 111, 111, 222231, 323231, 444321, 66666, 709917, 881237, 998321}; 
        //double salesData[] = readCsv(empty); 
        

        //salesData = readCsv(salesData); 
        double [] percent = new double [10]; 
        percent = percentCalc(salesData); 

        //Declare axes
        CategoryAxis xAxis = new CategoryAxis();
        NumberAxis yAxis = new NumberAxis();
        BarChart<String,Number> bc = new BarChart<String,Number>(xAxis,yAxis); //Create bar chart object 
        
        //Label axis and titles 
        stage.setTitle("Benford's law graph"); 
        bc.setTitle("Benford's Law Distribution Leading Digit"); 
        xAxis.setLabel("Digit");       
        yAxis.setLabel("Percent");
        bc.setLegendVisible(false);  //Makes legend invisible 
 
        //Define the series of data and assign data to the chart 
        XYChart.Series series = new XYChart.Series();
                
        series.getData().add(new XYChart.Data("1", percent[1]));
        series.getData().add(new XYChart.Data("2", percent[2]));     
        series.getData().add(new XYChart.Data("3", percent[3]));
        series.getData().add(new XYChart.Data("4", percent[4]));
        series.getData().add(new XYChart.Data("5", percent[5]));
        series.getData().add(new XYChart.Data("6", percent[6]));
        series.getData().add(new XYChart.Data("7", percent[7]));
        series.getData().add(new XYChart.Data("8", percent[8]));
        series.getData().add(new XYChart.Data("9", percent[9]));
        
        bc.getData().addAll(series); //Adds data to the bar chart 
        
        Scene scene  = new Scene(bc,800,600); //Creates the scene, sets width and height
        stage.setScene(scene); //Sets the scene 
        stage.show(); //Shows the stage  

        //Exports the numerical representation
        FileWriter writer = new FileWriter("something.txt"); //Lets say we were using a txt document 
        
        double arr[] = percent; //Let arr represent percent. 
        int len = arr.length;
        for (int i = 1; i < len; i++) {
            writer.write(i + "=" + arr[i] + "%"+"\t"+ "");
            writer.write("\n");
        }
        writer.close();
    }

    /* 
     * Description: Takes the sales data and records the number of times the first digit was shown then calculates the digit frequency
     * 
     * @author - Amir Sayffi & Gordon Wu 
     * @param salesData - double array value that is populated with the sale values 
     * */ 
    public static double[] percentCalc (double [] salesData) {

        //Initialize variables
        double timesShown [] = new double[10]; //9 digits but for loop starts at 1 so size 10 
        double amountShown = 0; 
        double percent [] = new double[10]; //Will store the percentages/digit frequencies 
  
        //Checks all the sales data and compares each number to the numbers from 1-9 
        for(int j=1; j < 10; j++){ 
          amountShown = 0; 
          for(int i=0; i < salesData.length; i++){          
            double tempNum = salesData[i]; //Will temporarily store an element 
            double firstDigit = Double.parseDouble(Double.toString(tempNum).substring(0, 1)); //Takes the first digit of the number
            
            //Checks if the first digit equals to a number from 1-9(j) 
            if(firstDigit == j){
              amountShown += 1; 
            }
          }
          timesShown[j] = amountShown; //Populate the array timesShown 
        }
      
        //Calculates the percentage for all 9 digits
        for(int n = 1; n < 10; n++){
          percent[n] = timesShown[n]/salesData.length * 100; 
          percent[n] = Math.round(percent[n]*10.0) / 10.0; //Rounds to 1 decimal place
          System.out.println(n+ ":" + percent[n]);
        }
        //Checks if the first digit frequency is between 29% and 32% 
        if (percent[1] > 29 && percent[1] < 32){
          System.out.println("Fraud likely did NOT occur."); 
        }
        else{
          System.out.println("Fraud likely did occur."); 
        }
        return percent; 
      }
}
  
 
 

 
 
